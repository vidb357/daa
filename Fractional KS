#include <stdio.h>

struct Item {
    int value;
    int weight;
};

void sortItems(struct Item arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            double r1 = (double)arr[j].value / arr[j].weight;
            double r2 = (double)arr[j + 1].value / arr[j + 1].weight;
            if (r1 < r2) {
                struct Item temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

double fractionalKnapsack(int W, struct Item arr[], int n) {
    sortItems(arr, n);
    double maxValue = 0.0;
    
    for (int i = 0; i < n; i++) {
        if (arr[i].weight <= W) {
            W -= arr[i].weight;
            maxValue += arr[i].value;
        } else {
            maxValue += arr[i].value * ((double)W / arr[i].weight);
            break;
        }
    }
    
    return maxValue;
}

int main() {
    struct Item arr[] = { {60, 10}, {100, 20}, {120, 30} };
    int W = 50;
    int n = sizeof(arr) / sizeof(arr[0]);
    
    printf("Maximum value in Knapsack = %.2f\n", fractionalKnapsack(W, arr, n));
    return 0;
}
