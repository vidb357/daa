#include <stdio.h>
#include <limits.h>

int minMergeCost(int files[], int n, int start, int end) {
    if (start >= end) 
        return 0;
    
    int minCost = INT_MAX;
    
    for (int mid = start; mid < end; mid++) {
        int leftCost = minMergeCost(files, n, start, mid);
        int rightCost = minMergeCost(files, n, mid + 1, end);
        int mergeCost = leftCost + rightCost;
        
        for (int i = start; i <= end; i++)
            mergeCost += files[i];
        
        if (mergeCost < minCost)
            minCost = mergeCost;
    }
    
    return minCost;
}

int optimalMergeCost(int files[], int n) {
    return minMergeCost(files, n, 0, n - 1);
}

int main() {
    int files[] = {10, 20, 30, 40};
    int n = sizeof(files) / sizeof(files[0]);
    printf("Minimum cost of merging files: %d\n", optimalMergeCost(files, n));
    return 0;
}
